---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o ./k8s.yaml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongo

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o ./k8s.yaml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: overleaf
  name: overleaf
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    io.kompose.service: overleaf

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o ./k8s.yaml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: redis
  name: redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o ./k8s.yaml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o ./k8s.yaml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/test-overleaf-pro-default: "true"
        io.kompose.service: mongo
    spec:
      containers:
        - args:
            - --replSet
            - overleaf
          image: mongo:5.0
          livenessProbe:
            exec:
              command:
                - echo 'db.stats().ok' | mongo localhost:27017/test --quiet
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 10
          name: mongo
          ports:
            - containerPort: 27017
              protocol: TCP
          volumeMounts:
            - mountPath: /data/db
              name: mongo-claim0
      restartPolicy: Always
      volumes:
        - name: mongo-claim0
          persistentVolumeClaim:
            claimName: mongo-claim0

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mongo-claim0
  name: mongo-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o ./k8s.yaml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: overleaf
  name: overleaf
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: overleaf
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o ./k8s.yaml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/test-overleaf-pro-default: "true"
        io.kompose.service: overleaf
    spec:
      containers:
        - env:
            - name: ALL_TEX_LIVE_DOCKER_IMAGES
              value: ghcr.io/ayaka-notes/texlive-full:2023.1
            - name: COMPILE_TIMEOUT
              value: "600"
            - name: DOCKER_RUNNER
              value: "true"
            - name: EMAIL_CONFIRMATION_DISABLED
              value: "true"
            - name: ENABLED_LINKED_FILE_TYPES
              value: project_file,project_output_file
            - name: ENABLE_CONVERSIONS
              value: "true"
            - name: OVERLEAF_APP_NAME
              value: Overleaf(Pro) Ayaka-notes Edition
            - name: OVERLEAF_IS_SERVER_PRO
              value: "true"
            - name: OVERLEAF_MONGO_URL
              value: mongodb://mongo/sharelatex
            - name: OVERLEAF_PROXY_LEARN
              value: "true"
            - name: OVERLEAF_REDIS_HOST
              value: redis
            - name: OVERLEAF_SITE_LANGUAGE
              value: zh-CN
            - name: REDIS_HOST
              value: redis
            - name: SANDBOXED_COMPILES
              value: "true"
            - name: SANDBOXED_COMPILES_HOST_DIR
              value: /data/sharelatex_data/data/compiles
            - name: SANDBOXED_COMPILES_SIBLING_CONTAINERS
              value: "true"
            - name: SYNCTEX_BIN_HOST_PATH
              value: /data/sharelatex_data/bin
            - name: TEXMFVAR
              value: /var/lib/overleaf/tmp/texmf-var
            - name: TEX_LIVE_DOCKER_IMAGE
              value: ghcr.io/ayaka-notes/texlive-full:2023.1
          image: ghcr.io/ayaka-notes/overleaf:latest
          name: overleaf
          ports:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/overleaf
              name: overleaf-claim0
            - mountPath: /var/run/docker.sock
              name: overleaf-claim1
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      volumes:
        - name: overleaf-claim0
          persistentVolumeClaim:
            claimName: overleaf-claim0
        - name: overleaf-claim1
          hostPath:
            path: /var/run/docker.sock
          # persistentVolumeClaim:
          #   claimName: overleaf-claim1

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: overleaf-claim0
  name: overleaf-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: overleaf-claim1
  name: overleaf-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o ./k8s.yaml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o ./k8s.yaml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/test-overleaf-pro-default: "true"
        io.kompose.service: redis
    spec:
      containers:
        - image: redis:6.2
          name: redis
          ports:
            - containerPort: 6379
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: redis-claim0
      restartPolicy: Always
      volumes:
        - name: redis-claim0
          persistentVolumeClaim:
            claimName: redis-claim0

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: redis-claim0
  name: redis-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

